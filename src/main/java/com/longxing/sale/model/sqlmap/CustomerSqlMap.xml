<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">


<!-- 不使用namespace是由于sql搜索定位会比较方便 -->
<sqlMap>

    <resultMap id="RM.Customer" class="com.longxing.sale.model.Customer">
         <result property="custId" column="custId"/>
         <result property="custName" column="custName"/>
         <result property="telephone" column="telephone"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Customer.columns">
	    <![CDATA[
         cus0.custId , cus0.custName , cus0.telephone  
        
	    ]]>
	</sql>
	
    <insert id="Customer.insert" >
    <![CDATA[
        INSERT INTO customer (
        	custId ,
        	custName ,
        	telephone 
        ) VALUES (
        	#custId# ,
        	#custName# ,
        	#telephone# 
        )
    ]]>
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Long" type="post" keyProperty="custId" >
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="Customer.update" >
    <![CDATA[
        UPDATE customer SET
	        custName = #custName# ,
	        telephone = #telephone# 
        WHERE 
	        custId = #custId# 
    ]]>
    </update>

    <delete id="Customer.delete">
    <![CDATA[
        DELETE FROM customer WHERE
        custId = #custId# 
    ]]>
    </delete>
    
    <select id="Customer.getById" resultMap="RM.Customer">
	    SELECT <include refid="Customer.columns"/>
	    <![CDATA[
	        FROM customer AS cus0 
	        WHERE 
		        cus0.custId = #custId# 
	    ]]>
    </select>

	<sql id="Customer.findPage.where">
	    <dynamic prepend="WHERE">
		       <isNotEmpty prepend="AND" property="custId">
		              cus0.custId = #custId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="custName">
		              cus0.custName = #custName#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="telephone">
		              cus0.telephone = #telephone#
		       </isNotEmpty>
	       	   <isNotEmpty prepend="AND" property="searchTerm">
	        	(  cus0.custName like '%$searchTerm$%' or   cus0.telephone like '%$searchTerm$%'   )
	           </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <select id="Customer.findPage.count" resultClass="long">
        SELECT count(*) FROM  customer AS cus0 <include refid="Customer.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="Customer.findPage" resultMap="RM.Customer">
    	SELECT <include refid="Customer.columns"/> FROM customer AS cus0 
		<include refid="Customer.findPage.where"/>
		<isNotEmpty property="sortColumns">
			ORDER BY cus0.$sortColumns$
		</isNotEmpty>
    </select>

	
</sqlMap>

