<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">


<!-- 不使用namespace是由于sql搜索定位会比较方便 -->
<sqlMap>

    <resultMap id="RM.Producttype" class="com.longxing.sale.model.Producttype">
         <result property="typeId" column="typeId"/>
         <result property="name" column="name"/>
         <result property="code" column="code"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Producttype.columns">
	    <![CDATA[
         pro0.typeId , pro0.name , pro0.code  
        
	    ]]>
	</sql>
	
    <insert id="Producttype.insert" >
    <![CDATA[
        INSERT INTO producttype (
        	typeId ,
        	name ,
        	code 
        ) VALUES (
        	#typeId# ,
        	#name# ,
        	#code# 
        )
    ]]>
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Long" type="post" keyProperty="typeId" >
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="Producttype.update" >
    <![CDATA[
        UPDATE producttype SET
	        name = #name# ,
	        code = #code# 
        WHERE 
	        typeId = #typeId# 
    ]]>
    </update>

    <delete id="Producttype.delete">
    <![CDATA[
        DELETE FROM producttype WHERE
        typeId = #typeId# 
    ]]>
    </delete>
    
    <select id="Producttype.getById" resultMap="RM.Producttype">
	    SELECT <include refid="Producttype.columns"/>
	    <![CDATA[
	        FROM producttype AS pro0 
	        WHERE 
		        pro0.typeId = #typeId# 
	    ]]>
    </select>

	<sql id="Producttype.findPage.where">
	    <dynamic prepend="WHERE">
		       <isNotEmpty prepend="AND" property="typeId">
		              pro0.typeId = #typeId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="name">
		              pro0.name = #name#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="code">
		              pro0.code = #code#
		       </isNotEmpty>
	       	   <isNotEmpty prepend="AND" property="searchTerm">
	        	(  pro0.code like '%$searchTerm$%' or   pro0.name like '%$searchTerm$%'   )
	           </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <select id="Producttype.findPage.count" resultClass="long">
        SELECT count(*) FROM  producttype AS pro0 <include refid="Producttype.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="Producttype.findPage" resultMap="RM.Producttype">
    	SELECT <include refid="Producttype.columns"/> FROM producttype AS pro0 
		<include refid="Producttype.findPage.where"/>
		<isNotEmpty property="sortColumns">
			ORDER BY pro0.$sortColumns$
		</isNotEmpty>
    </select>

	
</sqlMap>

