<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">


<!-- 不使用namespace是由于sql搜索定位会比较方便 -->
<sqlMap>

    <resultMap id="RM.Sale" class="com.longxing.sale.model.Sale">
         <result property="saleId" column="saleId"/>
        <result property="custId" column="custId"/>
        <result property="custIdTxt" column="cus1_custname"/>
         <result property="custName" column="custName"/>
         <result property="custTel" column="custTel"/>
         <result property="paid" column="paid"/>
         <result property="unPaid" column="unPaid"/>
         <result property="otherFee" column="otherFee"/>
         <result property="profit" column="profit"/>
         <result property="paymentStatus" column="paymentStatus"/>
        <result property="createId" column="createId"/>
        <result property="createIdTxt" column="use2_username"/>
        <result property="transportId" column="transportId"/>
        <result property="transportIdTxt" column="tra3_driver"/>
         <result property="carNumber" column="carNumber"/>
         <result property="driver" column="driver"/>
         <result property="driverTel" column="driverTel"/>
         <result property="updateDate" column="updateDate"/>
         <result property="createdDate" column="createdDate"/>
        <result property="updateId" column="updateId"/>
        <result property="updateIdTxt" column="use4_username"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Sale.columns">
	    <![CDATA[
         sal0.saleId , sal0.custId , sal0.custName , sal0.custTel , sal0.paid , sal0.unPaid , sal0.otherFee , sal0.profit , sal0.paymentStatus , sal0.createId , sal0.transportId , sal0.carNumber , sal0.driver , sal0.driverTel , sal0.updateDate , sal0.createdDate , sal0.updateId  , cus1.custName as cus1_custname, use2.userName as use2_username, tra3.driver as tra3_driver, use4.userName as use4_username
        
	    ]]>
	</sql>
	
    <insert id="Sale.insert" >
    <![CDATA[
        INSERT INTO sale (
        	saleId ,
        	custId ,
        	custName ,
        	custTel ,
        	paid ,
        	unPaid ,
        	otherFee ,
        	profit ,
        	paymentStatus ,
        	createId ,
        	transportId ,
        	carNumber ,
        	driver ,
        	driverTel ,
        	updateDate ,
        	createdDate ,
        	updateId 
        ) VALUES (
        	#saleId# ,
        	#custId# ,
        	#custName# ,
        	#custTel# ,
        	#paid# ,
        	#unPaid# ,
        	#otherFee# ,
        	#profit# ,
        	#paymentStatus# ,
        	#createId# ,
        	#transportId# ,
        	#carNumber# ,
        	#driver# ,
        	#driverTel# ,
        	#updateDate# ,
        	#createdDate# ,
        	#updateId# 
        )
    ]]>
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Long" type="post" keyProperty="saleId" >
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="Sale.update" >
    <![CDATA[
        UPDATE sale SET
	        custId = #custId# ,
	        custName = #custName# ,
	        custTel = #custTel# ,
	        paid = #paid# ,
	        unPaid = #unPaid# ,
	        otherFee = #otherFee# ,
	        profit = #profit# ,
	        paymentStatus = #paymentStatus# ,
	        transportId = #transportId# ,
	        carNumber = #carNumber# ,
	        driver = #driver# ,
	        driverTel = #driverTel# ,
	        updateDate = #updateDate# ,
	        updateId = #updateId# 
        WHERE 
	        saleId = #saleId# 
    ]]>
    </update>

    <delete id="Sale.delete">
    <![CDATA[
        DELETE FROM sale WHERE
        saleId = #saleId# 
    ]]>
    </delete>
    
    <select id="Sale.getById" resultMap="RM.Sale">
	    SELECT <include refid="Sale.columns"/>
	    <![CDATA[
	        FROM sale AS sal0   Left Join customer AS cus1 ON sal0.custId=cus1.custId  Left Join user AS use2 ON sal0.createId=use2.userId  Left Join transport AS tra3 ON sal0.transportId=tra3.transportId  Left Join user AS use4 ON sal0.updateId=use4.userId
	        WHERE 
		        sal0.saleId = #saleId# 
	    ]]>
    </select>

	<sql id="Sale.findPage.where">
	    <dynamic prepend="WHERE">
		       <isNotEmpty prepend="AND" property="saleId">
		              sal0.saleId = #saleId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="custId">
		              sal0.custId = #custId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="custName">
		              sal0.custName = #custName#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="custTel">
		              sal0.custTel = #custTel#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="paid">
		              sal0.paid = #paid#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="unPaid">
		              sal0.unPaid = #unPaid#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="otherFee">
		              sal0.otherFee = #otherFee#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="profit">
		              sal0.profit = #profit#
		       </isNotEmpty>
		       <isNotEqual	prepend="AND" property="paymentStatus" compareValue="-1">  sal0.paymentStatus = #paymentStatus#</isNotEqual>	
		       <isNotEmpty prepend="AND" property="createId">
		              sal0.createId = #createId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="transportId">
		              sal0.transportId = #transportId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="carNumber">
		              sal0.carNumber = #carNumber#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="driver">
		              sal0.driver = #driver#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="driverTel">
		              sal0.driverTel = #driverTel#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="updateDateBegin">
		              sal0.updateDate >= #updateDateBegin#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="updateDateEnd">
		              sal0.updateDate &lt;= #updateDateEnd#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="createdDateBegin">
		              sal0.createdDate >= #createdDateBegin#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="createdDateEnd">
		              sal0.createdDate &lt;= #createdDateEnd#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="updateId">
		              sal0.updateId = #updateId#
		       </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <select id="Sale.findPage.count" resultClass="long">
        SELECT count(*) FROM  sale AS sal0 <include refid="Sale.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="Sale.findPage" resultMap="RM.Sale">
    	SELECT <include refid="Sale.columns"/> FROM sale AS sal0   Left Join customer AS cus1 ON sal0.custId=cus1.custId  Left Join user AS use2 ON sal0.createId=use2.userId  Left Join transport AS tra3 ON sal0.transportId=tra3.transportId  Left Join user AS use4 ON sal0.updateId=use4.userId
		<include refid="Sale.findPage.where"/>
		<isNotEmpty property="sortColumns">
			ORDER BY sal0.$sortColumns$
		</isNotEmpty>
    </select>

	
</sqlMap>

